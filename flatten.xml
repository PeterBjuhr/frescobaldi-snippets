<?xml version='1.0' encoding='UTF-8'?>
<snippets>

<!--
  Created by Frescobaldi 2.18.1.
  
  Every snippet is represented by:
    title:      title text
    shortcuts:  list of shortcut elements, every shortcut is a key sequence
    body:       the snippet text
  
  The snippet id attribute can be the name of a builtin snippet or a random
  name like 'n123456'. In the latter case, the title is used to determine
  whether a snippet is new or updated.
-->

<snippet id="n773305">
<title>Flatten</title>
<shortcuts>
<shortcut>Shift+PgDown</shortcut>
</shortcuts>
<body>-*- python;
# This snippet adds a flat to the closest note.

import lydocument
import ly.lex.lilypond as lp
import ly.pitch

c = lydocument.cursor(cursor)
runner = lydocument.Runner.at(c, True, True)
lang = documentinfo.docinfo(cursor.document()).language() or 'nederlands'

forw_token = None

for f in runner.forward():
    if isinstance(f, lp.Note) and f not in ('R' ,'q', 's', 'r'):
        forw_token = f
        break
        
for b in runner.backward():
    if isinstance(b, lp.Note) and b not in ('R' ,'q', 's', 'r'):
        backw_token = b
        break

if not forw_token is None:
    fdist = forw_token.pos - c.end
    bdist = c.start - backw_token.end         
    closest_token = forw_token if fdist &lt; bdist else backw_token
else: 
    closest_token = backw_token
pos = closest_token.pos
end = closest_token.end
        
with c.document as d:
    readp = ly.pitch.pitchReader(lang)(closest_token)
    p = ly.pitch.Pitch(*readp)
    p.alter -= 0.5
    newp = ly.pitch.pitchWriter(lang)(p.note, p.alter)
    d[pos:end] = newp</body>
</snippet>

</snippets>
